{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pedroaquino/Desktop/ios-calculator/ios-calculator/src/components/Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CalcDisplay from './CalcDisplay';\nimport CalcButtonLine from './CalcButtonLine';\nimport CalcButton from './CalcButton';\nimport pipe from 'ramda/src/pipe';\nimport dropLast from 'ramda/src/dropLast';\n\nconst Calculator = ({\n  expression,\n  onClickCalcButton\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"calc\",\n  children: [/*#__PURE__*/_jsxDEV(CalcDisplay, {\n    text: expression\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calc__buttons\",\n    children: [/*#__PURE__*/_jsxDEV(CalcButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"C\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"AC\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"+/-\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"\\xF7\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"7\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"8\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"9\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"X\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"4\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"5\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"6\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"-\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"1\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"2\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"3\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"+\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"0\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \".\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalcButton, {\n        text: \"=\",\n        onClick: onClickCalcButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this); // constants\n\n\n_c = Calculator;\nconst OPERATIONS = {\n  '+': (...numbers) => numbers.reduce((acc, item) => acc + item, 0),\n  'X': (...numbers) => numbers.reduce((acc, item) => acc * item, 1),\n  '-': (...numbers) => numbers.reduce((acc, item) => acc === 0 ? (acc - item) * -1 : acc - item, 0),\n  'รท': (...numbers) => numbers.reduce((acc, item, index) => index === 0 ? item / acc : acc / item, 1)\n};\nconst ACTIONS = {\n  '=': expression => pipe(splitExpression, parseExpression, calculateExpression)(expression),\n  'C': expression => dropLast(1, expression),\n  'AC': () => '0',\n  '+/-': expression => {\n    return parseExpression(expression).map((item, index, arr) => isNumber(item) && arr[index - 1] != '+' ? item * -1 : item).join('');\n  }\n}; // helpers\n\nconst isNumber = number => !isNaN(number);\n\nconst isOperation = button => !!OPERATIONS[button];\n\nconst sanitizeExpression = button => expression => {\n  return expression === '0' ? button : expression + button;\n};\n\nconst splitExpression = expression => {\n  const splited = expression.split('');\n\n  if (isOperation(splited[0])) {\n    const [op, number, ...other] = splited;\n    return [op + number, ...other];\n  } else {\n    return splited;\n  }\n};\n\nconst parseExpression = splitedExpression => {\n  let result = [];\n  let numbers = [];\n  let counter = 0;\n\n  while (counter < splitedExpression.length) {\n    const item = splitedExpression[counter];\n\n    if (isNumber(item)) {\n      numbers.push(item);\n    } else {\n      result.push(Number(numbers.join('')));\n      result.push(item);\n      numbers = [];\n    }\n\n    counter++;\n  }\n\n  if (numbers.length) {\n    result.push(Number(numbers.join('')));\n  }\n\n  return result;\n};\n\nconst calculateExpression = parsed => {\n  let result = 0;\n  let currentOperation = null;\n  let counter = 0;\n\n  while (counter < parsed.length) {\n    const item = parsed[counter];\n\n    if (isNumber(item)) {\n      result = !currentOperation ? item : currentOperation(result, item);\n    }\n\n    if (isOperation(item)) {\n      currentOperation = OPERATIONS[item];\n    }\n\n    counter++;\n  }\n\n  return result;\n};\n\nconst CalculatorContainer = () => {\n  _s();\n\n  const [expression, setExpression] = useState('0');\n\n  const onClickCalcButton = button => {\n    const action = ACTIONS[button];\n\n    if (action) {\n      pipe(action, setExpression)(expression);\n      return;\n    }\n\n    pipe(sanitizeExpression(button), setExpression)(expression);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Calculator, {\n    expression: expression,\n    onClickCalcButton: onClickCalcButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CalculatorContainer, \"Jx4mKdY3vqF2v+VBHNDBf1jxLKM=\");\n\n_c2 = CalculatorContainer;\nexport default CalculatorContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Calculator\");\n$RefreshReg$(_c2, \"CalculatorContainer\");","map":{"version":3,"sources":["/Users/pedroaquino/Desktop/ios-calculator/ios-calculator/src/components/Calculator.js"],"names":["React","useState","CalcDisplay","CalcButtonLine","CalcButton","pipe","dropLast","Calculator","expression","onClickCalcButton","OPERATIONS","numbers","reduce","acc","item","index","ACTIONS","splitExpression","parseExpression","calculateExpression","map","arr","isNumber","join","number","isNaN","isOperation","button","sanitizeExpression","splited","split","op","other","splitedExpression","result","counter","length","push","Number","parsed","currentOperation","CalculatorContainer","setExpression","action"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CalcDisplay from './CalcDisplay';\nimport CalcButtonLine from './CalcButtonLine';\nimport CalcButton from './CalcButton';\nimport pipe from 'ramda/src/pipe';\nimport dropLast from 'ramda/src/dropLast';\n\nconst Calculator = ({ expression, onClickCalcButton }) => (\n  <div className=\"calc\">\n    <CalcDisplay text={expression} />\n    <div className=\"calc__buttons\">\n      <CalcButtonLine>\n        <CalcButton text=\"C\" onClick={onClickCalcButton} />\n        <CalcButton text=\"AC\" onClick={onClickCalcButton} />\n        <CalcButton text=\"+/-\"  onClick={onClickCalcButton} />\n        <CalcButton text=\"รท\"  onClick={onClickCalcButton} />\n      </CalcButtonLine>\n      <CalcButtonLine>\n        <CalcButton text=\"7\" onClick={onClickCalcButton} />\n        <CalcButton text=\"8\" onClick={onClickCalcButton} />\n        <CalcButton text=\"9\" onClick={onClickCalcButton} />\n        <CalcButton text=\"X\" onClick={onClickCalcButton} />\n      </CalcButtonLine>\n      <CalcButtonLine>\n        <CalcButton text=\"4\" onClick={onClickCalcButton} />\n        <CalcButton text=\"5\" onClick={onClickCalcButton} />\n        <CalcButton text=\"6\" onClick={onClickCalcButton} />\n        <CalcButton text=\"-\" onClick={onClickCalcButton} />\n      </CalcButtonLine>\n      <CalcButtonLine>\n        <CalcButton text=\"1\" onClick={onClickCalcButton} />\n        <CalcButton text=\"2\" onClick={onClickCalcButton} />\n        <CalcButton text=\"3\" onClick={onClickCalcButton} />\n        <CalcButton text=\"+\" onClick={onClickCalcButton} />\n      </CalcButtonLine>\n      <CalcButtonLine>\n        <CalcButton text=\"0\" onClick={onClickCalcButton} />\n        <CalcButton text=\".\" onClick={onClickCalcButton} />\n        <CalcButton text=\"=\" onClick={onClickCalcButton} />\n      </CalcButtonLine>\n    </div>\n  </div>\n);\n\n// constants\nconst OPERATIONS = {\n  '+': (...numbers) => numbers.reduce((acc, item) => acc + item, 0),\n  'X': (...numbers) => numbers.reduce((acc, item) => acc * item, 1),\n  '-': (...numbers) => numbers.reduce((acc, item) => acc === 0 ? (acc - item) * -1 : acc - item, 0),\n  'รท': (...numbers) => numbers.reduce((acc, item, index) => index === 0 ? item / acc : acc / item, 1)\n};\n\nconst ACTIONS = {\n  '=': expression => pipe(\n    splitExpression,\n    parseExpression, \n    calculateExpression\n  )(expression),\n  'C': expression => dropLast(1, expression),\n  'AC': () => '0',\n  '+/-': (expression) => {\n    return parseExpression(expression)\n      .map((item, index, arr) => isNumber(item) && arr[index - 1] != '+' ? item * -1 : item)\n      .join('')\n  }\n};\n\n// helpers\nconst isNumber = number => !isNaN(number);\n\nconst isOperation = button => !!OPERATIONS[button];\n\nconst sanitizeExpression = button => expression => { \n  return expression === '0' ? button : expression + button;\n}\n\nconst splitExpression = expression => {\n  const splited = expression.split('');\n  \n  if (isOperation(splited[0])) {\n    const [op, number, ...other] = splited;\n    return [\n      op + number,\n      ...other\n    ];\n  } else {\n    return splited;\n  }\n\n};\n\nconst parseExpression = splitedExpression => {\n  \n  let result = [];\n  let numbers = [];\n  let counter = 0;\n\n  while (counter < splitedExpression.length) {\n    const item = splitedExpression[counter];\n    \n    if(isNumber(item)) {\n      numbers.push(item)\n    } else {\n      result.push(Number(numbers.join('')));\n      result.push(item)\n      numbers = [];\n    }\n    counter++;\n  }\n\n  if (numbers.length) {\n    result.push(Number(numbers.join('')));\n  }\n\n  return result;\n};\n\nconst calculateExpression = parsed => {  \n  let result = 0;\n  let currentOperation = null;\n  let counter = 0;\n\n  while (counter < parsed.length) {\n    const item = parsed[counter];\n    \n    if (isNumber(item)) {\n      result = !currentOperation ? item : currentOperation(result, item);\n    }\n\n    if (isOperation(item)) {\n      currentOperation = OPERATIONS[item];\n    }\n\n    counter++;\n  }\n  return result;\n};\n\n\nconst CalculatorContainer = () => {\n\n  const [expression, setExpression] = useState('0');\n\n  const onClickCalcButton = button => {\n    const action = ACTIONS[button];\n\n    if (action) {\n      pipe(\n        action,\n        setExpression\n      )(expression);\n      return;\n    }\n\n    pipe(\n      sanitizeExpression(button),\n      setExpression\n    )(expression);\n  };\n\n  return <Calculator \n    expression={expression}\n    onClickCalcButton={onClickCalcButton}\n  />\n}\n\nexport default CalculatorContainer;"]},"metadata":{},"sourceType":"module"}