{"ast":null,"code":"var _curry2 = /*#__PURE__*/require(\"./internal/_curry2\");\n\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable\");\n\nvar _dropLast = /*#__PURE__*/require(\"./internal/_dropLast\");\n\nvar _xdropLast = /*#__PURE__*/require(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;","map":{"version":3,"sources":["/Users/pedroaquino/Desktop/ios-calculator/ios-calculator/node_modules/ramda/src/dropLast.js"],"names":["_curry2","require","_dispatchable","_dropLast","_xdropLast","dropLast","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GACX,aACAC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,aAAa,GACjB,aACAD,OAAO,CAAC,0BAAD,CAFP;;AAIA,IAAIE,SAAS,GACb,aACAF,OAAO,CAAC,sBAAD,CAFP;;AAIA,IAAIG,UAAU,GACd,aACAH,OAAO,CAAC,uBAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAII,QAAQ,GACZ,aACAL,OAAO,EACP,aACAE,aAAa,CAAC,EAAD,EAAKE,UAAL,EAAiBD,SAAjB,CAFN,CAFP;;AAMAG,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLast =\n/*#__PURE__*/\nrequire(\"./internal/_dropLast\");\n\nvar _xdropLast =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;"]},"metadata":{},"sourceType":"script"}